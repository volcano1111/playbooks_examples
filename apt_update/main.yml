- hosts: tardis
  become: yes
  tasks:
  - name: Run the equivalent of "apt-get update" as a separate step
    ansible.builtin.apt:
      update_cache: yes
    when: ansible_os_family == 'Debian'

  - name: List packages to upgrade (1/2)
    ansible.builtin.shell: apt list --upgradable 2>/dev/null | awk -F'/' 'NR>1{print $1}'
    register: updates
    changed_when: False
    when: ansible_os_family == 'Debian'
    failed_when: updates.rc < 0

  - name: List packages to upgrade (2/2)
    ansible.builtin.debug: msg="{{ updates.stdout_lines | count }} packages to upgrade ({{ updates.stdout_lines | join(', ') }})"
    when: (ansible_os_family == 'Debian' and updates.stdout_lines)

  - name: Update all packages to their latest version
    ansible.builtin.apt:
#      state: latest
      upgrade: full
    when: ansible_os_family == 'Debian'

  - name: Check what the new version is
    ansible.builtin.shell:  lsb_release -r | awk '{print $2}'
    changed_when: False
    register: new_release

  - name: Notify distribution version upgrade
    ansible.builtin.debug: msg="Debian has been upgraded from {{ ansible_lsb.release }} to {{ new_release.stdout }}"
    when: ansible_lsb.release != new_release.stdout

  - name: Autoremove unnecessary packages
    ansible.builtin.apt:
      autoremove: yes
    when: ansible_os_family == 'Debian'
